;AUTORES:
;	DANIEL MORGERA PEREZ
;	VICTOR NIEVES SANCHEZ

;--------------------------------------MACROS--------------------------------------
;Carga el registro ra con la direccion efectiva definida por la etiqueta ETIQ
LEA:    MACRO  (reg, ETIQ)
        or     reg, r0,  low(ETIQ)
        or.u   reg, reg, high(ETIQ)
        ENDMACRO
	
;Decrementa el registro ra y salta a la etiqueta ETIQ si el resultado no es 0	
DBNZ:	MACRO (ra, ETIQ)
	sub ra, ra, 1
	cmp r5, ra, 0
	bb0 eq, r5, ETIQ
	ENDMACRO  

;AÃ±ade un elemento a la cima de la pila
PUSH:   MACRO  (reg)
        subu   r30, r30, 4
        st     reg, r30, r0
        ENDMACRO

;Quita el elemento en la cima de la pila
POP:    MACRO  (reg)
        ld     reg, r30, r0
        addu   r30, r30, 4
        ENDMACRO

;-------------------------------DATOS-------------------------------------
;org 0

;nF: 		res 4			;Reservo espacio para la variable nF, que es un entero sin signo de 32 bits

;		org 0x8000

;IM1:		data 2, 2
;		data 0x04030201
;IM2:		data 2, 2
;		data 0x08060402

;MFILTRO:       data 2, 2, 2
;		data 2, 0, 2
;		data 2, 2, 2
;MODMFILTRO: 	data 1, 2
		
;		org 0x8000
;IMAGEN:
;		data    3, 3
;		data    0x40302010, 0x80706050, 0x90
;FILTRO: 	data    0, 0, 0
;		data    0, 1, 0
;		data    0, 0, 0

;SUBIMAGEN:
;		data    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
;SUBIMAGEN:
;		data    0x40302010, 0x80706050, 0x90
;FILTRO: 	data    0, 0, 0
;		data    0, 1, 0
;		data    0, 0, 0

;SUBIMAGEN:
;		data    0x00000000, 0x00000055, 0x00
;FILTRO: 	data    0, 0, 0
;		data    0, -2, 0
;		data    0, 0, 0

;		org 0x8000
;IMAGEN:
;		data 3, 3
;		data 0x40302010, 0x80706050, 0x90
;
;		org 0x8040
;SUBIMAGEN:
;		data 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
		
;		org 0x8000
;IMAGEN:
;		data    5, 8
;		data    0x04030201, 0x08070605
;		data    0x0C0B0A09, 0x100F0E0D
;		data    0x14131211, 0x18171615
;		data    0x1C1B1A19, 0x201F1E1D
;		data    0x24232221, 0x28272625

;FILTRO:	 	data    1, 1, 1
;		data    1, 0, 1
;		data    1, 1, 1

;IMAGEN:
;		data    5, 5
;		data    0x44332211, 0x03020155
;		data    0x22210504, 0x31252423
;		data    0x35343332, 0x44434241
;		data    0x00000045

;FILTRO: 	data    0, 0, 0
;		data    0, 1, 0
;		data    0, 0, 0

;		org 0x8000
;IMAGEN:	
;		data 5,5
;		data 	0x04030201, 0x08070605
;		data 	0x0C0B0A09, 0x100F0E0D
;		data	0x14131211, 0x18171615
;		data	0x00000019

;		org 0x8000
;IMAGEN:
;		data    3,3
;		data    0x04030201, 0x08070605, 0x90
;FILTRADA:
;		res     20
;FILTRO: 	data    0, 0, 0
;		data    0, 1, 0
;		data    0, 0, 0	

;		org 0x8000
;IMAGEN:
;		data    4, 6
;		data    0x04030201, 0x02000605
;		data    0x05030104, 0x0C090603
;		data    0x0804120F, 0x80402010
;FILTRADA:	res     40
;FILTRO: 	data    0xFFFFFFFE, 0, 0xFFFFFFFE
;		data    0, 	    0, 0
;		data    0xFFFFFFFE, 0, 0xFFFFFFFE	


;	org 0x8000
;IMAGEN:
;		data 4, 4
;		data 0x04030201, 0x0D0E0F10, 0x05040302, 0x23222120
;DUPLA:	 	data 1, 2
;FILTRO: 	data 0x0A, 0x0A, 0x0A
;		data 0x0A, 0, 0x0A
;		data 0x0A, 0x0A, 0x0A
;	org 0x8100
;FILTRADA: 	res 24
;		data 0xAAAAAAAA, 0xAAAAAAAA

;	org   0x8000
;IMAGEN:     	data  4, 8
;		data  0xFF0201FF, 0xFF0403FF
;		data  0xFF0605FF, 0xFF0807FF
;		data  0xFF0605FF, 0xFF0807FF
;		data  0xFF0201FF, 0xFF0403FF
;FILTRO:     	data  -1, -1, -1
;		data  -1,  0, -1
;		data  -1, -1, -1
;DUPLA:     	data  4, 2
;	org   0x8100
;FILTRADA: 	res   40

;	org   0x8000
;IMAGEN:		data 3, 3
;		data 0x04030201, 0x08070605, 0x09000000
;FILTRO:		data 0, 0, 0
;		data 0, 1, 0
;		data 0, 0, 0
;DUPLA:		data 1, 1
;	org 0x8100
;FILTRADA: 	res 20
;		data 0xAAAAAAAA, 0xAAAAAAAA

;--------------------------PROGRAMA PRINCIPAL---------------------------------

org 1000

;PPAL1:		LEA(r30,50000)	
;		Test nfiltrados con oper=0
;		PUSH(r0)		
;		bsr nFiltrados
		
;		Test nfiltrados con oper=5
;		addu r2, r0, 5		
;		PUSH(r2)
;		bsr nFiltrados
;		POP(r2)

;		Test nfiltrados con oper=-5
;		subu r2, r0, 5
;		st r2, r0, 0
;		PUSH(r2)
;		bsr nFiltrados
;		POP(r2)
;		stop

;PPAL2:		LEA(r30, 50000)
;		LEA(r2, IM1)
;		LEA(r3, IM2)
;		PUSH(r3)
;		PUSH(r2)
;		bsr Comp
;		stop

;PPAL3:		LEA(r30, 50000)
;		LEA(r2, MFILTRO)
;		LEA(r3, MODMFILTRO)
;		PUSH(r3)
;		PUSH(r2)
;		bsr ActualizaFiltro
;		stop

;PPAL4:		LEA(r30, 50000)
;		LEA(r2, IMAGEN)
;		LEA(r3, SUBIMAGEN)
;		addu r4, r0, 1
;		PUSH(r4)
;		addu r6, r0, 1
;		PUSH(r6)
;		PUSH(r3)
;		PUSH(r2)
;		bsr SubMatriz
;		stop	

;PPAL5:		LEA(r30, 50000)
;		LEA(r2, FILTRO)
;		LEA(r3, SUBIMAGEN)
;		PUSH(r2)
;		PUSH(r3)
;		bsr ValorPixel
;		stop

;PPAL6:		LEA(r30, 50000)
;		LEA(r2, FILTRO)
;		LEA(r3, IMAGEN)
;		addu r4, r0, 2
;		addu r6, r0, 2
;		PUSH(r2)
;		PUSH(r4)
;		PUSH(r6)
;		PUSH(r3)
;		bsr FilPixel
;		stop


;PPAL7:
;		LEA(r30, 5000)
;		LEA(r2, IMAGEN)
;		LEA(r3, FILTRADA)
;		LEA(r4, FILTRO)
;		PUSH(r4)
;		PUSH(r3)
;		PUSH(r2)
;		bsr Filtro
;		stop


;PPAL8:		
;		addu r10, r0, 4		;nf
;		st r10, r0, 0
;		LEA(r30, 36840)
;		LEA(r2, IMAGEN) 
;		LEA(r3, DUPLA)
;		LEA(r4, FILTRO)
;		LEA(r5, FILTRADA)
;		addu r11, r0, 0		;ncambios
;		PUSH(r11)
;		PUSH(r3)
;		PUSH(r4)
;		PUSH(r5)
;		PUSH(r2)
;		bsr FiltRec
;		stop
;---------------------------SUBRUTINAS-----------------------------------

;---------NFILTRADOS----------
nFiltrados:	PUSH(r1)
		ld r4, r30, 4		;r4 = oper
		cmp r3, r4, r0
		bb1 ge, r3, INIC
		ld r8, r0, 0		;r8 = nF
		cmp r3, r8, r0
		bb1 lt, r3, ZERO
		bb1 eq, r3, NF_0
		sub r8, r8, 1		;nF-1 -> nF
		br NF_0
INIC:		st r4, r0, 0
		or r29, r4, r0
		br FINNFILT
ZERO:		st r0, r0, 0
		or r29, r0, 0
		br FINNFILT
NF_0:		st r8, r0, 0
		or r29, r8 ,r0
FINNFILT: 	POP(r1)
		jmp(r1)

;-----COMPARAR------
Comp:		PUSH(r1)
		or r22, r0, r0		;dif
		ld r20, r30, 4		;Direccion Im1
		ld r21, r30, 8 		;Direccion Im2
		ld r2, r20, 0		;M
		ld r3, r20, 4		;N
		mulu r2, r2, r3		;M*N
		or r3, r0, r0		;i = 0
		addu r20, r20, 8
		addu r21, r21, 8
BUCCMP:		cmp r6, r2, r3
		bb1 eq, r6, FINCOMP	
		ld.b r23, r20, r0	;Im1ij
		ld.b r24, r21, r0	;Im2ij
		subu r4, r23, r24	;Im1ij - Im2ij
		mulu r4, r4, r4		;(Im1ij - Im2ij)^2
		addu r22, r22, r4	;dif = dif + (Im1ij - Im2ij)^2
		addu r20, r20, 1
		addu r21, r21, 1
		addu r3, r3, 1
		br BUCCMP
FINCOMP:	divu r22, r22, r2	;dif/M*N
		or r29, r22, r0
		POP(r1)
		jmp(r1)
		
;-----ACTUALIZAFILTRO------
ActualizaFiltro:PUSH(r1)
		ld r28, r30, 4		;Direccion MF
		ld r27, r30, 8		;Direccion MMF
		ld r20, r27, 0		;Numerador
		ld r21, r27, 4		;Denominador
		or r10, r0, 9		;i = 9
		
		cmp r2, r20, r0		;Numerador = 0?
		bb1 eq, r2, FIN
		cmp r2, r21, r0		;Denominador = 0?
		bb1 eq, r2, FIN
BUCAF:		ld r22, r28, r0		;Elemento
		muls r23, r22, r20	;MFiltro(i) * Numerador
		divs r24, r23, r21	;Elemento / Denominador
		st r24, r28, r0
		addu r28, r28, 4
		DBNZ(r10, BUCAF)
FIN:		POP(r1)
		jmp(r1)		

;-----SUBMATRIZ------------	
SubMatriz:	PUSH(r1)
		ld r23, r30, 4		;Direccion Imagen
		ld r22, r30, 8		;Dir SubImagen
		ld r20, r30, 16		;j
		ld r21, r30, 12		;i
		ld r24, r23, 0		;M
		ld r25, r23, 4		;N
		addu r26, r23, 8	;Direccion primer elemento Imagen
		mulu r2, r24, r25	;MxN
		subu r24, r24, 1	;M-1
		subu r25, r25, 1	;N-1
		cmp r3, r21, r0		;i=?0
		bb1 eq, r3, BORDE	
		cmp r3, r20, r0		;j=?0
		bb1 eq, r3, BORDE
		cmp r3, r21, r24	;i=?M-1
		bb1 eq, r3, BORDE
		cmp r3, r20, r25	;j=?N-1
		bb1 eq, r3, BORDE
NOBORDE:	addu r25, r25, 1	;N principio
		addu r24, r24, 1	;M principio
		subu r21, r21, 1	;i-1
		subu r20, r20, 1	;j-1
		mulu r4, r21, r25	;Nxi
		addu r4, r4, r20	;desplazamiento para ij
		addu r27, r26, r4	;puntero a Im(ij)
		addu r7, r0, 3		;contador elementos
		addu r8, r0, 3		;contador filas
		addu r9, r0, r0 	;contador avance
		addu r10, r0, r0	;contador subimagen
BUCNOBOR:	ld.b r28, r27, r9	;elemento a r28
		st.b r28, r22, r10	;guardo elemento en submatriz
		addu r9, r9, 1		;
		addu r10, r10, 1	;
		DBNZ(r7, BUCNOBOR)
		addu r7, r0, 3		;reinicio contador elementos
		addu r27, r27, r25	;avanzo hasta siguiente fila submatriz
		or r9, r0, 0		;reinicio contador avance
		DBNZ(r8, BUCNOBOR)
		br FINSUB
BORDE:		addu r25, r25, 1	;N principio
		;addu r24, r24, 1	;M principio
		mulu r4, r21, r25	;Nxi
		addu r4, r4, r20	;ij
		ld.b r27, r26, r4	;Imagen(ij)
		addu r6, r0, 9		;ContadorDBNZ=9
		addu r7, r0, 0		;ContadorAvance=0
BUCSUBM:	st.b r27, r22, r7
		addu r7, r7, 1		
		DBNZ(r6, BUCSUBM)
FINSUB: 	POP(r1)
		jmp(r1)		
	
;----------VALORPIXEL-----------------
ValorPixel:	PUSH(r1)
		or r2, r0, 0		;Acc
		ld r20, r30, 4		;Puntero SubImg
		ld r21, r30, 8		;Puntero MFiltro
		addu r3, r0, 0		;Contador
BUCVAL:		cmp r5, r3, 9
		bb1 eq, r5, FINVALP		
		ld.bu r22, r20, r3	;elemento SubImg
		ld r23, r21, r0		;elemento MFiltro
		muls r4, r22, r23	;elementoSubImgxelementoMFiltro
		addu r2, r2, r4		;acumulo resultado
		addu r3, r3, 1
		addu r21, r21, 4
		br BUCVAL
FINVALP:	or r29, r2, 0
		POP(r1)
		jmp(r1)

;------------FILPIXEL--------------------
FilPixel:	PUSH(r1)
		PUSH(r31)
		or r31, r30, 0
		subu r30, r31, 12	;Reserva 3x4 Subimg
		ld r21, r31, 8		;DirIm
		ld r3, r31, 12		;i
		ld r2, r31, 16		;j
		ld r20, r31, 20		;DirMF
		or r4, r30, r0		;DirSubImg
;		----------------------------------------
		PUSH(r2)
		PUSH(r3)
		PUSH(r4)
		PUSH(r21)
		bsr SubMatriz
;		----------------------------------------
		subu r30, r31, 12	;Puntero de pila en variables locales
		ld r20, r31, 20		;DirMF
		or r4, r30, 0		;SubImg
		PUSH(r20)
		PUSH(r4)
		bsr ValorPixel
;		----------------------------------------
		or r6, r0, r0		;acumulador=0
		addu r7, r0, 0		;contador
		ld r20, r31, 20		;vuelvo a cargar la dirMF por si se machaca en subrutina
PESO:		cmp r5, r7, 9
		bb1 eq, r5, CONTI
		ld r8, r20, r0 		;elemento
		addu r6, r6, r8		;acumulador+elemento
		addu r7, r7, 1
		addu r20, r20, 4
		br PESO
CONTI:		cmp r9, r6, r0		;acumulador=?0
		bb1 eq, r9, COMPAR	
		divs r29, r29, r6	
COMPAR:		cmp r9, r29, 0		;r29<?0
		bb1 lt, r9, MENOR
		cmp r9, r29, 255	;r29>?255
		bb1 gt, r9, MAYOR		
		br FINFILP
MENOR:		addu r29, r0, r0
		br FINFILP
MAYOR:		add r29, r0, 255
FINFILP:	or r30, r31, r0
		POP(r31)
		POP(r1)
		jmp(r1)

;------------FILTRO--------------------
Filtro:		PUSH(r1)
		PUSH(r31)
		or r31, r30, r0
		ld r20, r31, 8 		;Imagen
		ld r21, r31, 12		;ImFiltrada
		ld r22, r31, 16		;MFiltro
		ld r23, r20, 0		;M
		ld r24, r20, 4		;N
		st r23, r21, 0		;M->ImFiltrada
		st r24, r21, 4		;N->ImFiltrada
		addu r2, r0, 0		;i
		addu r3, r0, 0		;j
		addu r4, r0, 0		;Contador ImFiltrada
		;addu r6, r21, 8		;Primer elemento ImFiltrada
		PUSH(r23)		;M
		PUSH(r24)		;N
		PUSH(r4)		;Contador
		br BUF2
BUF1:		addu r2, r2, 1		;i++
		addu r3, r0, 0		;j=0
		cmp r5, r2, r23		;i=?M
		bb1 eq, r5, FINFILT
BUF2:		PUSH(r22)		;MFiltro
		PUSH(r3)		;j
		PUSH(r2)		;i
		PUSH(r20)		;Imagen
		bsr FilPixel
		POP(r20)
		POP(r2)
		POP(r3)
		POP(r22)
		ld r4, r30, 0		;Recupero contador
		ld r24, r30, 4		;Recupero N
		ld r23, r30, 8		;Recupero M
		ld r21, r30, 24		;ImFiltrada
		addu r21, r21, 8	;Primer elemento ImFiltrada
		st.b r29, r21, r4	;Almaceno pixel filtrado en ImFiltrada
		addu r4, r4, 1		;contador++
		addu r3, r3, 1		;j++
		st r4, r30, 0		;Guardo qcontador
		cmp r5, r3, r24		;j=?N
		bb1 eq, r5, BUF1
		br BUF2
FINFILT:	or r30, r31, 0		;Destruyo el marco de pila
		POP(r31)
		POP(r1)
		jmp(r1)
				
;------------FILTREC--------------------
FiltRec:	PUSH(r1)
		PUSH(r31)
		or r31, r30, 0
		ld r2, r31, 8		;ImagenIn
		ld r3, r2, 0		;M
		ld r4, r2, 4		;N
		mulu r19, r3, r4	;MxN
BUCRES:		extu r7, r19, 2<0>	;Extraigo los dos primeros bits de MxN
		cmp r5, r7, r0		;Multiplos4?
		bb1 eq, r5, PROG
		addu r19, r19, 1
		br BUCRES
PROG:		addu r19, r19, 8		;MxN+4+4

		subu r30, r31, r19	;Reserva para ImTmp
		ld r7, r31, 12		;ImOut
		ld r8, r31, 16		;MFiltro
;		-----------------------
		PUSH(r8)
		PUSH(r7)
		PUSH(r2)
		bsr Filtro
		POP(r2)
		POP(r7)
		POP(r8)
;		-----------------------
R1:		ld r9, r31, 20		;ModMFiltro
		PUSH(r9)
		PUSH(r8)
		bsr ActualizaFiltro
		POP(r8)
		POP(r9)

;		-----------------------
R2:		addu r21, r0, 0		;contador
		
BUCCOPIA:	ld r20, r7, r21		;carga palabra de ImOut
		st r20, r30, r21	;Guardo palabra de ImOut en espacio de ImTmp
		addu r21, r21, 4	
		cmp r5, r21, r19	;compruebo si he copiado todas las palabras de ImOut
		bb1 eq, r5, CONTFR
		br BUCCOPIA
;		-----------------------
CONTFR:		;POP(r6)
		subu r11, r0, 1		;oper<0
		PUSH(r11)
		bsr nFiltrados
		POP(r11)
		cmp r5, r29, 0
		bb1 eq, r5, NFN		
;		-----------------------
R3:		
		ld r2, r31, 8		
		PUSH(r7)
		PUSH(r2)
		bsr Comp
R29:		POP(r2)
		POP(r7)
		ld r10, r31, 24		;NCambios
		cmp r5, r29, r10
		bb1 lt, r5, FINFR
;		-----------------------
R4:		
		ld r8, r31, 16		;MFILTRO
		ld r9, r31, 20		;MODMFILTRO
		or r2, r30, 0		;R2 = TMP
		PUSH(r10)
		PUSH(r9)
		PUSH(r8)
		PUSH(r7)
		PUSH(r2)
		bsr FiltRec
		br FINFR
;		-----------------------
NFN:		subu r29, r0, 1
FINFR:		or r30, r31, 0
		POP(r31)
		POP(r1)
		jmp(r1)






	
